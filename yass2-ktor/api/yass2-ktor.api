public final class ch/softappeal/yass2/ktor/CallCce : kotlin/coroutines/AbstractCoroutineContextElement {
	public static final field Key Lch/softappeal/yass2/ktor/CallCce$Key;
	public fun <init> (Lio/ktor/server/application/ApplicationCall;)V
	public final fun getCall ()Lio/ktor/server/application/ApplicationCall;
}

public final class ch/softappeal/yass2/ktor/CallCce$Key : kotlin/coroutines/CoroutineContext$Key {
}

public final class ch/softappeal/yass2/ktor/HttpKt {
	public static final fun route (Lio/ktor/server/routing/Route;Lch/softappeal/yass2/core/serialize/Serializer;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
	public static final fun tunnel (Lio/ktor/client/HttpClient;Lch/softappeal/yass2/core/serialize/Serializer;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lkotlin/jvm/functions/Function2;
	public static synthetic fun tunnel$default (Lio/ktor/client/HttpClient;Lch/softappeal/yass2/core/serialize/Serializer;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lkotlin/jvm/functions/Function2;
}

public final class ch/softappeal/yass2/ktor/WebSocketConnection : ch/softappeal/yass2/coroutines/session/Connection {
	public fun closed (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSession ()Lio/ktor/websocket/WebSocketSession;
	public fun write (Lch/softappeal/yass2/coroutines/session/Packet;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class ch/softappeal/yass2/ktor/WebSocketKt {
	public static final fun receiveLoop (Lio/ktor/websocket/WebSocketSession;Lch/softappeal/yass2/core/serialize/Serializer;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

